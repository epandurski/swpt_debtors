version: '3.6'

services:

  pg:
    image: postgres:$POSTGRES_VERSION
    environment:
      - 'POSTGRES_DB=$POSTGRES_DB'
      - 'POSTGRES_USER=$POSTGRES_USER'
      - 'POSTGRES_PASSWORD=$POSTGRES_PASSWORD'
    volumes:
      - 'pg-data-volume:/var/lib/postgresql/data'
      - './docker/pg/create-users.sql:/docker-entrypoint-initdb.d/create-users.sql'
    command: -c log_min_messages=FATAL


  rabbitmq:
    image: rabbitmq:$RABBITMQ_VERSION
    hostname: rabbitmq
    volumes:
      - './docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf'
      - 'rabbitmq-data-volume:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq'
    environment:
      - 'RABBITMQ_LOGS=-'
    ports:
      - $RABBITMQ_MANAGEMENT_LOCAL_PORT:15672


  redis:
    image: redis:6.0.9
    volumes:
      - 'redis-data-volume:/data'


  # This is a dummy mail server which is useful only for testing.
  mail:
    image: mailhog/mailhog:v1.0.1
    ports:
      - $MAILHOG_LOCAL_PORT:8025


  # This is the HTTP gateway for all the other containers.
  nginx:
    image: nginx:1.19.4
    volumes:
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './docker/nginx/templates:/etc/nginx/templates'
      - './docker/nginx/ssl/cert.pem:/etc/nginx/ssl/cert.pem'
      - './docker/nginx/ssl/key.pem:/etc/nginx/ssl/key.pem'
    ports:
      - $PUBLIC_PORT:$PUBLIC_PORT
    environment:
      - 'PORT=$PUBLIC_PORT'
      - 'DEBTORS_HYDRA_URL=http://debtors-login:4444'
      - 'DEBTORS_LOGIN_URL=http://debtors-login:8080'
      - 'DEBTORS_SERVER_URL=http://debtors-server:8080'
      - 'DEBTORS_SWAGGER_UI_URL=http://debtors-swagger-ui:8080'
      - 'NGINX_ENTRYPOINT_QUIET_LOGS=1'
    depends_on:
      - debtors-login
      - debtors-server
      - debtors-swagger-ui


  # This container is responsible for the OAuth2 login and consent.
  debtors-login:
    build:
      context: ./submodules/swpt_login
      dockerfile: Dockerfile
    environment:
      - 'SERVE_PUBLIC_PORT=4444'
      - 'SERVE_ADMIN_PORT=4445'
      - 'SERVE_TLS_ALLOW_TERMINATION_FROM=0.0.0.0/0'
      - 'WEBSERVER_PORT=8080'
      - 'WEBSERVER_WORKERS=1'
      - 'WEBSERVER_THREADS=3'
      - 'SUBJECT_PREFIX=debtors:'
      - 'TTL_ACCESS_TOKEN=24h'
      - 'TTL_REFRESH_TOKEN=720h'
      - 'SECRETS_SYSTEM=$HYDRA_SYSTEM_SECRET'
      - 'URLS_SELF_ISSUER=https://$PUBLIC_HOST/debtors-hydra/'
      - 'URLS_LOGIN=https://$PUBLIC_HOST/debtors-login/'
      - 'URLS_CONSENT=https://$PUBLIC_HOST/debtors-consent/'
      - 'URLS_ERROR=https://github.com/epandurski/swpt_login'
      - 'HYDRA_DSN=postgres://hydra_debtors:hydra_debtors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors_login:swpt_debtors_login@pg/${POSTGRES_DB}'
      - 'REDIS_URL=redis://redis:6379/1?health_check_interval=30'
      - 'HYDRA_ADMIN_URL=http://debtors-login:4445'
      - 'SITE_TITLE=Swaptacular'
      - 'STYLE_URL='
      - 'ABOUT_URL=https://github.com/epandurski/swpt_login'
      - 'RECAPTCHA_PUBLIC_KEY=6Lc902MUAAAAAJL22lcbpY3fvg3j4LSERDDQYe37'
      - 'RECAPTCHA_PIVATE_KEY=6Lc902MUAAAAAN--r4vUr8Vr7MU1PF16D9k2Ds9Q'
      - 'MAIL_SERVER=mail'
      - 'MAIL_PORT=1025'
      - 'MAIL_USE_TLS=False'
      - 'MAIL_USE_SSL=False'
      - 'MAIL_USERNAME=None'
      - 'MAIL_PASSWORD=None'
      - 'MAIL_DEFAULT_SENDER=Swaptacular <no-reply@example.com>'
      - 'API_AUTH2_TOKEN_URL=https://nginx:$PUBLIC_PORT/debtors-hydra/oauth2/token'
      - 'API_RESOURCE_SERVER=http://debtors-server:8080'
      - 'API_TIMEOUT_SECONDS=5'
      - 'SUPERVISOR_CLIENT_ID=debtors-supervisor'
      - 'SUPERVISOR_CLIENT_SECRET=debtors-supervisor'
      - 'APP_LOG_LEVEL=warning'
      - 'APP_LOG_FORMAT=json'
      - 'HYDRA_LOG_LEVEL=warning'
      - 'HYDRA_LOG_FORMAT=json'
    depends_on:
      - pg
      - redis
      - mail


  # The purpose of this container is to create the database schema for
  # the `debtors-login` container. It has to be run only once, but
  # running it multiple times should not do any harm.
  debtors-login-config:
    build:
      context: ./submodules/swpt_login
      dockerfile: Dockerfile
    environment:
      - 'HYDRA_DSN=postgres://hydra_debtors:hydra_debtors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors_login:swpt_debtors_login@pg/${POSTGRES_DB}'
    command: configure
    depends_on:
      - pg


  # The purpose of this container is to create the OAuth2 clients. It
  # has to be run only once, but running it multiple times should not
  # do any harm.
  debtors-hydra-config:
    build:
      context: ./submodules/swpt_login
      dockerfile: Dockerfile
    environment:
      - 'HYDRA_ADMIN_URL=http://debtors-login:4445'
    volumes:
      - './docker/hydra:/etc/hydra-config'
    command:
      hydra clients import
      /etc/hydra-config/debtors-supervisor.json
      /etc/hydra-config/swagger-ui.json
      --fake-tls-termination
      --fail-after 5m
    depends_on:
      - debtors-login


  debtors-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: app-image
    environment:
      - 'PORT=8080'
      - 'OAUTH2_INTROSPECT_URL=http://debtors-login:4445/oauth2/introspect'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors:swpt_debtors@pg:5432/${POSTGRES_DB}'
      - 'WEBSERVER_WORKERS=1'
      - 'WEBSERVER_THREADS=3'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'PROTOCOL_PROCESSES=1'
      - 'PROTOCOL_THREADS=3'
      - 'APP_LOG_LEVEL=warning'
      - 'APP_LOG_FORMAT=json'
      - 'SUBSTITUTE_LOCALHOST_IN_VARS=PROTOCOL_BROKER_URL'
    depends_on:
      - pg


  # The purpose of this container is to create the database schema for
  # the `debtors-server` container, and all the necessary RabbitMQ
  # objects (queues, exchanges, etc.). It has to be run only once, but
  # running it multiple times should not do any harm.
  debtors-server-config:
    build:
      context: .
      dockerfile: Dockerfile
      target: app-image
    environment:
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors:swpt_debtors@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'MIN_DEBTOR_ID=4294967296'
      - 'MAX_DEBTOR_ID=8589934591'
      - 'APP_LOG_LEVEL=warning'
      - 'APP_LOG_FORMAT=json'
      - 'SUBSTITUTE_LOCALHOST_IN_VARS=PROTOCOL_BROKER_URL'
    command: configure
    depends_on:
      - pg


  debtors-swagger-ui:
    build:
      context: .
      dockerfile: Dockerfile
      target: swagger-ui-image
    environment:
      - 'BASE_URL=/debtors-swagger-ui'
      - 'API_ROOT=https://$PUBLIC_HOST/'
      - 'OAUTH2_AUTHORIZATION_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/auth'
      - 'OAUTH2_TOKEN_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/token'
      - 'OAUTH2_REFRESH_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/token'
      - 'OAUTH2_REDIRECT_URL=https://$PUBLIC_HOST/debtors-swagger-ui/oauth2-redirect.html'


volumes:
  pg-data-volume:
  rabbitmq-data-volume:
  redis-data-volume:
