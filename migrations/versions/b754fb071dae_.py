"""empty message

Revision ID: b754fb071dae
Revises: 09e69ce87711
Create Date: 2019-10-31 13:05:49.751977

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b754fb071dae'
down_revision = '09e69ce87711'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interest_rate_concession',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('last_change_seqnum', sa.Integer(), nullable=False, comment='Incremented (with wrapping) on every change.'),
    sa.Column('last_change_ts', sa.TIMESTAMP(timezone=True), nullable=False, comment='Updated on every increment of `last_change_seqnum`. Must never decrease.'),
    sa.Column('irll_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True, comment='Enforced concession interest rate lower limits. Each element in this array should have a corresponding element in the `irll_kickoffs` and `irll_cutoffs` arrays (the kickoff and cutoff dates for the limits). A `NULL` is the same as an empty array.'),
    sa.Column('irll_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irll_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('bul_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True, comment="Upper limits for creditor's `account.principal` column. The concession interest rate lower limits will apply only when the `account.principal` is within the limits specified here. Each element in this array should have a corresponding element in the `bul_kickoffs` and `bul_cutoffs` arrays (the kickoff and cutoff dates for the limits). A `NULL` is the same as an empty array."),
    sa.Column('bul_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('bul_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.CheckConstraint('bul_cutoffs IS NULL OR array_ndims(bul_cutoffs) = 1'),
    sa.CheckConstraint('bul_kickoffs IS NULL OR array_ndims(bul_kickoffs) = 1'),
    sa.CheckConstraint('bul_values IS NULL OR array_ndims(bul_values) = 1'),
    sa.CheckConstraint('irll_cutoffs IS NULL OR array_ndims(irll_cutoffs) = 1'),
    sa.CheckConstraint('irll_kickoffs IS NULL OR array_ndims(irll_kickoffs) = 1'),
    sa.CheckConstraint('irll_values IS NULL OR array_ndims(irll_values) = 1'),
    sa.PrimaryKeyConstraint('debtor_id', 'creditor_id'),
    comment='Represents an enforced concession interest rate, valid only for a specific creditor, under specific conditions.'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('interest_rate_concession')
    # ### end Alembic commands ###
