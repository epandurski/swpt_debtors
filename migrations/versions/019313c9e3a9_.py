"""empty message

Revision ID: 019313c9e3a9
Revises: 
Create Date: 2019-10-13 19:26:42.408635

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '019313c9e3a9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('changed_debtor_info_signal',
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('change_seqnum', sa.Integer(), nullable=False),
    sa.Column('change_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('balance', sa.BigInteger(), nullable=True),
    sa.Column('interest_rate_target', sa.REAL(), nullable=False),
    sa.Column('bll_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True),
    sa.Column('bll_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('bll_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irll_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True),
    sa.Column('irll_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irll_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irul_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True),
    sa.Column('irul_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irul_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.PrimaryKeyConstraint('debtor_id', 'change_seqnum')
    )
    op.create_table('debtor',
    sa.Column('debtor_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('last_change_seqnum', sa.Integer(), nullable=False, comment='Incremented (with wrapping) on every change.'),
    sa.Column('last_change_ts', sa.TIMESTAMP(timezone=True), nullable=False, comment='Updated on every increment of `last_change_seqnum`. Must never decrease.'),
    sa.Column('status', sa.SmallInteger(), nullable=False, comment='Debtor status flags.'),
    sa.Column('balance', sa.BigInteger(), nullable=True, comment='The total issued amount with a negative sign. Normally, it will be a negative number or a zero. A positive value, although theoretically possible, should be very rare. A `NULL` means that the balance is unknown.'),
    sa.Column('balance_last_change_seqnum', sa.Integer(), nullable=True, comment='Updated on each change of the `balance`.'),
    sa.Column('balance_last_update_ts', sa.TIMESTAMP(timezone=True), nullable=True, comment='Updated on each change of the `balance`.'),
    sa.Column('interest_rate_target', sa.REAL(), nullable=False, comment="The desired annual rate (in percents) at which the interest should accumulate on creditors' accounts. The actual interest rate could be different if interest rate limits are enforced."),
    sa.Column('bll_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True, comment='Enforced lower limits for the `balance` column. Each element in  this array should have a corresponding element in the `bll_kickoffs` and `bll_cutoffs` arrays (the kickoff and cutoff dates for the limits). A `NULL` is the same as an empty array.'),
    sa.Column('bll_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('bll_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irll_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True, comment='Enforced interest rate lower limits. Each element in this array should have a corresponding element in the `irll_kickoffs` and `irll_cutoffs` arrays (the kickoff and cutoff dates for the limits). A `NULL` is the same as an empty array.'),
    sa.Column('irll_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irll_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irul_values', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=True, comment='Enforced interest rate upper limits. Each element in this array should have a corresponding element in the `irul_kickoffs` and `irul_cutoffs` arrays (the kickoff and cutoff dates for the limits). A `NULL` is the same as an empty array.'),
    sa.Column('irul_kickoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.Column('irul_cutoffs', postgresql.ARRAY(sa.DATE(), dimensions=1), nullable=True),
    sa.CheckConstraint('bll_cutoffs IS NULL OR array_ndims(bll_cutoffs) = 1'),
    sa.CheckConstraint('bll_kickoffs IS NULL OR array_ndims(bll_kickoffs) = 1'),
    sa.CheckConstraint('bll_values IS NULL OR array_ndims(bll_values) = 1'),
    sa.CheckConstraint('interest_rate_target > -100.0 AND interest_rate_target <= 100.0'),
    sa.CheckConstraint('irll_cutoffs IS NULL OR array_ndims(irll_cutoffs) = 1'),
    sa.CheckConstraint('irll_kickoffs IS NULL OR array_ndims(irll_kickoffs) = 1'),
    sa.CheckConstraint('irll_values IS NULL OR array_ndims(irll_values) = 1'),
    sa.CheckConstraint('irul_cutoffs IS NULL OR array_ndims(irul_cutoffs) = 1'),
    sa.CheckConstraint('irul_kickoffs IS NULL OR array_ndims(irul_kickoffs) = 1'),
    sa.CheckConstraint('irul_values IS NULL OR array_ndims(irul_values) = 1'),
    sa.PrimaryKeyConstraint('debtor_id'),
    comment="Represents debtor's principal information."
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('debtor')
    op.drop_table('changed_debtor_info_signal')
    # ### end Alembic commands ###
